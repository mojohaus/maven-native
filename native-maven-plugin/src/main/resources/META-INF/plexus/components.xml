<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2017 MojoHaus.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<component-set>
    <components>

        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>lib</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>
                        org.codehaus.mojo:native-maven-plugin:unzipinc,
                        org.codehaus.mojo:native-maven-plugin:dump
                    </generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package>org.codehaus.mojo:native-maven-plugin:inczip</package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
            <role-hint>lib</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
            <configuration>
                <type>lib</type>
                <extension>lib</extension>
                <includesDependencies>true</includesDependencies>
            </configuration>
        </component>

        <!-- | native-dll -->
        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>dll</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>
                        org.codehaus.mojo:native-maven-plugin:unzipinc,
                        org.codehaus.mojo:native-maven-plugin:javah
                    </generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:resource-compile,
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link,
                        org.codehaus.mojo:native-maven-plugin:manifest
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package>org.codehaus.mojo:native-maven-plugin:inczip</package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
            <role-hint>dll</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
            <configuration>
                <type>dll</type>
                <extension>dll</extension>
                <includesDependencies>true</includesDependencies>
            </configuration>
        </component>

        <!-- | native-exe -->
        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>exe</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>org.codehaus.mojo:native-maven-plugin:unzipinc</generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:resource-compile,
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link,
                        org.codehaus.mojo:native-maven-plugin:manifest
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package></package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
            <role-hint>exe</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
            <configuration>
                <type>exe</type>
                <extension>exe</extension>
                <includesDependencies>true</includesDependencies>
            </configuration>
        </component>

        <!-- | native-a -->

        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>a</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>org.codehaus.mojo:native-maven-plugin:unzipinc</generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package>org.codehaus.mojo:native-maven-plugin:inczip</package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <!-- | native-o, on linux one can compile multiple .o files into one -->

        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>o</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>org.codehaus.mojo:native-maven-plugin:unzipinc</generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package></package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
            <role-hint>o</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
            <configuration>
                <type>o</type>
                <extension>o</extension>
                <includesDependencies>true</includesDependencies>
            </configuration>
        </component>

        <!-- | native-so -->
        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>so</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>
                        org.codehaus.mojo:native-maven-plugin:unzipinc,
                        org.codehaus.mojo:native-maven-plugin:javah
                    </generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package>org.codehaus.mojo:native-maven-plugin:inczip</package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
            <role-hint>so</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
            <configuration>
                <type>so</type>
                <extension>so</extension>
                <includesDependencies>true</includesDependencies>
            </configuration>
        </component>

        <!-- | hpux sl share -->

        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>sl</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>
                        org.codehaus.mojo:native-maven-plugin:unzipinc,
                        org.codehaus.mojo:native-maven-plugin:javah
                    </generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package>org.codehaus.mojo:native-maven-plugin:inczip</package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
            <role-hint>sl</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
            <configuration>
                <type>sl</type>
                <extension>sl</extension>
                <includesDependencies>true</includesDependencies>
            </configuration>
        </component>

        <!-- | native-dylib - MacOS -->
        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>dylib</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>
                        org.codehaus.mojo:native-maven-plugin:unzipinc,
                        org.codehaus.mojo:native-maven-plugin:javah
                    </generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package>org.codehaus.mojo:native-maven-plugin:inczip</package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
            <role-hint>dylib</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
            <configuration>
                <type>dylib</type>
                <extension>dylib</extension>
                <includesDependencies>true</includesDependencies>
            </configuration>
        </component>


        <!-- | native-jnilib ( a jni library for macosx ) -->
        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>jnilib</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>
                        org.codehaus.mojo:native-maven-plugin:unzipinc,
                        org.codehaus.mojo:native-maven-plugin:javah
                    </generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package>org.codehaus.mojo:native-maven-plugin:inczip</package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
            <role-hint>jnilib</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
            <configuration>
                <type>jnilib</type>
                <extension>jnilib</extension>
                <includesDependencies>true</includesDependencies>
            </configuration>
        </component>

        <!-- | native-uexe unix executable requires an extension -->

        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
            <role-hint>uexe</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
            <configuration>
                <phases>
                    <initialize>org.codehaus.mojo:native-maven-plugin:initialize</initialize>
                    <generate-sources>org.codehaus.mojo:native-maven-plugin:unzipinc</generate-sources>
                    <process-sources></process-sources>
                    <compile>
                        org.codehaus.mojo:native-maven-plugin:compile,
                        org.codehaus.mojo:native-maven-plugin:link
                    </compile>
                    <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
                    <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
                    <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
                    <package></package>
                    <install>org.apache.maven.plugins:maven-install-plugin:install</install>
                    <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
                </phases>
            </configuration>
        </component>

        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
            <role-hint>uexe</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
            <configuration>
                <type>uexe</type>
                <extension>uexe</extension>
                <includesDependencies>true</includesDependencies>
            </configuration>
        </component>

    </components>
</component-set>
